{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ljh/Desktop/reactBird/front/pages/signup.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd'; // useCallback으로 감싸주는 이유\n//함수컴포넌트가 스테이트가 바뀔때마다 전체가  통쨰로 재실행되면서 함수들이 새로 생성된다 !!\n//그것이 뜻하는 바는 ? 함수를전달받은 자신컴포넌트들은 , 렌더링을 다시한다는것.\n//함수도 객체기때문에 새로생성되면 다른객체가 되는데, 그러면 의도치 않은 리렌더링이 발생하기 때문에,\n//자식컴포넌트에 전달하는 함수는 전부 useCallback으로 감싸줘야 한다.\n\nvar signup = function signup() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var _useState = useState(''),\n      passCheck = _useState[0],\n      setPassCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useState3 = useState(false),\n      passwordError = _useState3[0],\n      setPasswordError = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1]; // 커스텀 훅.\n\n\n  var useInput = function useInput() {\n    _s();\n\n    var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    var _useState5 = useState(initValue),\n        value = _useState5[0],\n        setter = _useState5[1];\n\n    var handler = useCallback(function (e) {\n      setter(e.target.value);\n    }, []);\n    return [value, handler];\n  };\n\n  _s(useInput, \"BML8Xt9Fu4Zf6ze9hcTBhsVrUUM=\");\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nick = _useInput4[0],\n      onChangeNick = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePass = _useInput6[1];\n\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n    console.log({\n      id: id,\n      nick: nick,\n      password: password,\n      passCheck: passCheck,\n      term: term\n    });\n\n    if (password !== passCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n  }, [password, passCheck, term]); //함수내부에 쓰이는 State들을 dependency배열에 넣어준다.\n  //props로 값을 전달 받을때, 하위요소에있는 놈이. 화면 전체가 리렌더링 되는 것을 막기 위해 useCallBack을 쓴다?\n  //커스텀훅만들어서 더이상 안쓴다.\n  // const onChangeId = (e) => {\n  //     setId(e.target.value);\n  // };\n  // const onChangeNick = (e) => {\n  //     setNick(e.target.value);\n  // };\n  // const onChangePass = (e) => {\n  //     setPass(e.target.value);\n  // };\n\n  var onChangePassCheck = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPassCheck(e.target.value);\n  }, [password]);\n  var onChagneTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"node bird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    onSubmit: onSubmit,\n    stype: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"id\"), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"nickname\"), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-pass\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"password\"), __jsx(Input, {\n    name: \"user-pass\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-pass-chk\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"confirm pass\"), __jsx(Input, {\n    name: \"user-pass-chk\",\n    type: \"password\",\n    value: passCheck,\n    required: true,\n    onChange: onChangePassCheck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 39\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    value: term,\n    onChange: onChagneTerm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"\\uBE14\\uB77C\\uBE14\\uB77C \\uB0B4\\uC6A9\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 36\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    stype: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")))));\n};\n\n_s2(signup, \"XEqoP4flUqQ0w6jcJf84mPBgXpQ=\", true);\n\nexport default signup;","map":{"version":3,"sources":["/Users/ljh/Desktop/reactBird/front/pages/signup.js"],"names":["React","useState","useCallback","AppLayout","Head","Form","Input","Checkbox","Button","signup","passCheck","setPassCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","useInput","initValue","value","setter","handler","e","target","id","onChangeId","nick","onChangeNick","password","onChangePass","onSubmit","preventDefault","console","log","onChangePassCheck","onChagneTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';  \nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport{ Form, Input, Checkbox, Button } from 'antd';\n\n// useCallback으로 감싸주는 이유\n//함수컴포넌트가 스테이트가 바뀔때마다 전체가  통쨰로 재실행되면서 함수들이 새로 생성된다 !!\n//그것이 뜻하는 바는 ? 함수를전달받은 자신컴포넌트들은 , 렌더링을 다시한다는것.\n//함수도 객체기때문에 새로생성되면 다른객체가 되는데, 그러면 의도치 않은 리렌더링이 발생하기 때문에,\n//자식컴포넌트에 전달하는 함수는 전부 useCallback으로 감싸줘야 한다.\nconst signup = () => { \n    const[passCheck , setPassCheck] = useState('');\n    const[term, setTerm] = useState(false);\n    const[passwordError, setPasswordError] = useState(false);\n    const[termError, setTermError] = useState(false);\n\n    // 커스텀 훅.\n    const useInput = (initValue = null) =>{\n        const [ value, setter] = useState(initValue);\n        const handler = useCallback( (e) =>{\n            setter(e.target.value);\n        }, []);\n        return [value, handler];\n    }\n \n    const[id, onChangeId] = useInput('');\n    const[nick, onChangeNick] = useInput('');\n    const[password, onChangePass] = useInput('');\n\n    const onSubmit = useCallback( (e) => {\n        e.preventDefault();\n        console.log({id, nick, password, passCheck,term, });\n        if(password!== passCheck){\n            return setPasswordError(true);\n        }\n        if(!term){\n            return setTermError(true);\n        }\n    },[ password, passCheck, term]); //함수내부에 쓰이는 State들을 dependency배열에 넣어준다.\n\n    //props로 값을 전달 받을때, 하위요소에있는 놈이. 화면 전체가 리렌더링 되는 것을 막기 위해 useCallBack을 쓴다?\n\n    //커스텀훅만들어서 더이상 안쓴다.\n    // const onChangeId = (e) => {\n    //     setId(e.target.value);\n    // };\n    // const onChangeNick = (e) => {\n    //     setNick(e.target.value);\n    // };\n    // const onChangePass = (e) => {\n    //     setPass(e.target.value);\n    // };\n    const onChangePassCheck = useCallback((e) => {\n        setPasswordError(e.target.value !== password);\n        setPassCheck(e.target.value);\n    },[password]);\n    const onChagneTerm = useCallback( (e) => {\n        setTermError(false);\n        setTerm(e.target.checked);\n    },[]);\n \n    return<>\n        <Head>\n            <title>node bird</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\"/>\n        </Head>\n        <AppLayout> \n            <Form onSubmit={onSubmit} stype={{padding:10}}>\n                <div>\n                    <label htmlFor=\"user-id\">id</label>\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId} />\n                </div>\n                <div>\n                    <label htmlFor=\"user-nick\">nickname</label>\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\n                </div>\n                <div>\n                    <label htmlFor=\"user-pass\">password</label>\n                    <Input name=\"user-pass\" type=\"password\" value={password} required onChange={onChangePass} />\n                </div>\n                <div>\n                    <label htmlFor=\"user-pass-chk\">confirm pass</label>\n                    <Input name=\"user-pass-chk\" type=\"password\" value={passCheck} required onChange={onChangePassCheck} />\n                    {passwordError && <div style={{color:'red'}}>비밀번호가 일치하지 않습니다.</div>}\n                </div>\n                <div>\n                    <Checkbox name=\"user-term\" value={term} onChange={onChagneTerm}>\n                        블라블라 내용에 동의합니다.\n                    </Checkbox>\n                    { termError && <div style={{color:'red'}}>약관에 동의하셔야 합니다.</div>}\n                </div>\n                <div stype={{marginTop:10}}>\n                    <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n                </div>\n        </Form>\n        </AppLayout> \n    </>\n           \n};\n\nexport default signup;"]},"metadata":{},"sourceType":"module"}